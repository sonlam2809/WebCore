<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="apple-touch-icon" sizes="76x76" href="/admin/img/apple-icon.png">
    <link rel="icon" type="image/png" href="/admin/img/favicon.png">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <title>
        @ViewData["Title"] - @Html.Lang("WebName")
    </title>
    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no' name='viewport' />
    <!--     Fonts and icons     -->
    <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Roboto+Slab:400,700|Material+Icons" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css">
    <!-- CSS Files -->
    <link href="~/admin/css/custom.css" rel="stylesheet" />
    <environment include="Development">
        <link href="/admin/css/material-dashboard.css?v=2.1.0" rel="stylesheet" />
        <link href="~/admin/plugins/material-datepicker/css/material-datepicker.css" rel="stylesheet" />
    </environment>
    <environment exclude="Development">
        <link href="~/admin/css/material-dashboard.min.css" rel="stylesheet" />
    </environment>
</head>
<body class="">
    <div class="wrapper ">
        <div class="sidebar" data-color="purple" data-background-color="white" data-image="/admin/img/sidebar-1.jpg">
            <!--
                Tip 1: You can change the color of the sidebar using: data-color="purple | azure | green | orange | danger"

                Tip 2: you can also add an image using data-image tag
            -->
            <div class="logo">
                <a href="http://www.creative-tim.com" class="simple-text logo-normal">
                    Creative Tim
                </a>
            </div>
            <div class="sidebar-wrapper">
                <ul class="nav">
                    <li class="nav-item active  ">
                        <a class="nav-link" href="/Admin/Dashboard">
                            <i class="material-icons">dashboard</i>
                            <p>Dashboard</p>
                        </a>
                    </li>
                    <li class="nav-item ">
                        <a class="nav-link" href="/Admin/User">
                            <i class="material-icons">person</i>
                            <p>User Profile</p>
                        </a>
                    </li>
                    <li class="nav-item ">
                        <a class="nav-link" href="/Admin/Language">
                            <i class="material-icons">content_paste</i>
                            <p>Language</p>
                        </a>
                    </li>
                    <li class="nav-item ">
                        <a class="nav-link" href="./typography.html">
                            <i class="material-icons">library_books</i>
                            <p>Typography</p>
                        </a>
                    </li>
                    <li class="nav-item ">
                        <a class="nav-link" href="./icons.html">
                            <i class="material-icons">bubble_chart</i>
                            <p>Icons</p>
                        </a>
                    </li>
                    <li class="nav-item ">
                        <a class="nav-link" href="./map.html">
                            <i class="material-icons">location_ons</i>
                            <p>Maps</p>
                        </a>
                    </li>
                    <li class="nav-item ">
                        <a class="nav-link" href="./notifications.html">
                            <i class="material-icons">notifications</i>
                            <p>Notifications</p>
                        </a>
                    </li>
                    <!-- <li class="nav-item active-pro ">
                          <a class="nav-link" href="./upgrade.html">
                              <i class="material-icons">unarchive</i>
                              <p>Upgrade to PRO</p>
                          </a>
                      </li> -->
                </ul>
            </div>
        </div>
        @RenderBody()
    </div>



    <environment include="Development">
        <!--   Core JS Files   -->
        <script src="/admin/js/core/jquery.min.js" type="text/javascript"></script>
        <script src="/admin/js/core/popper.min.js" type="text/javascript"></script>
        <script src="/admin/js/core/bootstrap-material-design.min.js" type="text/javascript"></script>
        <script src="/admin/js/plugins/perfect-scrollbar.jquery.min.js"></script>
        <!--  Google Maps Plugin    -->
        @*<script src="https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE"></script>*@
        <!-- Chartist JS -->
        <script src="/admin/js/plugins/chartist.min.js"></script>
        <!--  Notifications Plugin    -->
        <script src="/admin/js/plugins/bootstrap-notify.js"></script>
        <!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
        <script src="/admin/js/material-dashboard.min.js?v=2.1.0" type="text/javascript"></script>
        <script src="~/admin/js/pages/common.js"></script>
        <script src="~/admin/plugins/material-datepicker/js/material-datepicker.js"></script>

        <script>
            $(document).ready(function () {
                // Javascript method's body can be found in assets/js/demos.js
                md.initDashboardPageCharts();

            });
        </script>
    </environment>

    <environment exclude="Development">
        <script src="~/admin/js/core/bundle.min.js"></script>
        @*<script>
                $(document).ready(function () {
                    // Javascript method's body can be found in assets/js/demos.js
                    md.initDashboardPageCharts();

                });
            </script>*@

        <script>
            demo = {
                initDocumentationCharts: function () {
                    if ($('#dailySalesChart').length != 0 && $('#websiteViewsChart').length != 0) {
                        /* ----------==========     Daily Sales Chart initialization For Documentation    ==========---------- */

                        dataDailySalesChart = {
                            labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],
                            series: [
                                [12, 17, 7, 17, 23, 18, 38]
                            ]
                        };

                        optionsDailySalesChart = {
                            lineSmooth: Chartist.Interpolation.cardinal({
                                tension: 0
                            }),
                            low: 0,
                            high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look
                            chartPadding: {
                                top: 0,
                                right: 0,
                                bottom: 0,
                                left: 0
                            },
                        }

                        var dailySalesChart = new Chartist.Line('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);

                        var animationHeaderChart = new Chartist.Line('#websiteViewsChart', dataDailySalesChart, optionsDailySalesChart);
                    }
                },

                initDashboardPageCharts: function () {

                    if ($('#dailySalesChart').length != 0 || $('#completedTasksChart').length != 0 || $('#websiteViewsChart').length != 0) {
                        /* ----------==========     Daily Sales Chart initialization    ==========---------- */

                        dataDailySalesChart = {
                            labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],
                            series: [
                                [12, 17, 7, 17, 23, 18, 38]
                            ]
                        };

                        optionsDailySalesChart = {
                            lineSmooth: Chartist.Interpolation.cardinal({
                                tension: 0
                            }),
                            low: 0,
                            high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look
                            chartPadding: {
                                top: 0,
                                right: 0,
                                bottom: 0,
                                left: 0
                            },
                        }

                        var dailySalesChart = new Chartist.Line('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);

                        md.startAnimationForLineChart(dailySalesChart);



                        /* ----------==========     Completed Tasks Chart initialization    ==========---------- */

                        dataCompletedTasksChart = {
                            labels: ['12p', '3p', '6p', '9p', '12p', '3a', '6a', '9a'],
                            series: [
                                [230, 750, 450, 300, 280, 240, 200, 190]
                            ]
                        };

                        optionsCompletedTasksChart = {
                            lineSmooth: Chartist.Interpolation.cardinal({
                                tension: 0
                            }),
                            low: 0,
                            high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look
                            chartPadding: {
                                top: 0,
                                right: 0,
                                bottom: 0,
                                left: 0
                            }
                        }

                        var completedTasksChart = new Chartist.Line('#completedTasksChart', dataCompletedTasksChart, optionsCompletedTasksChart);

                        // start animation for the Completed Tasks Chart - Line Chart
                        md.startAnimationForLineChart(completedTasksChart);


                        /* ----------==========     Emails Subscription Chart initialization    ==========---------- */

                        var dataWebsiteViewsChart = {
                            labels: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
                            series: [
                                [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]

                            ]
                        };
                        var optionsWebsiteViewsChart = {
                            axisX: {
                                showGrid: false
                            },
                            low: 0,
                            high: 1000,
                            chartPadding: {
                                top: 0,
                                right: 5,
                                bottom: 0,
                                left: 0
                            }
                        };
                        var responsiveOptions = [
                            ['screen and (max-width: 640px)', {
                                seriesBarDistance: 5,
                                axisX: {
                                    labelInterpolationFnc: function (value) {
                                        return value[0];
                                    }
                                }
                            }]
                        ];
                        var websiteViewsChart = Chartist.Bar('#websiteViewsChart', dataWebsiteViewsChart, optionsWebsiteViewsChart, responsiveOptions);

                        //start animation for the Emails Subscription Chart
                        md.startAnimationForBarChart(websiteViewsChart);
                    }
                },

                initGoogleMaps: function () {
                    var myLatlng = new google.maps.LatLng(40.748817, -73.985428);
                    var mapOptions = {
                        zoom: 13,
                        center: myLatlng,
                        scrollwheel: false, //we disable de scroll over the map, it is a really annoing when you scroll through page
                        styles: [{
                            "featureType": "water",
                            "stylers": [{
                                "saturation": 43
                            }, {
                                "lightness": -11
                            }, {
                                "hue": "#0088ff"
                            }]
                        }, {
                            "featureType": "road",
                            "elementType": "geometry.fill",
                            "stylers": [{
                                "hue": "#ff0000"
                            }, {
                                "saturation": -100
                            }, {
                                "lightness": 99
                            }]
                        }, {
                            "featureType": "road",
                            "elementType": "geometry.stroke",
                            "stylers": [{
                                "color": "#808080"
                            }, {
                                "lightness": 54
                            }]
                        }, {
                            "featureType": "landscape.man_made",
                            "elementType": "geometry.fill",
                            "stylers": [{
                                "color": "#ece2d9"
                            }]
                        }, {
                            "featureType": "poi.park",
                            "elementType": "geometry.fill",
                            "stylers": [{
                                "color": "#ccdca1"
                            }]
                        }, {
                            "featureType": "road",
                            "elementType": "labels.text.fill",
                            "stylers": [{
                                "color": "#767676"
                            }]
                        }, {
                            "featureType": "road",
                            "elementType": "labels.text.stroke",
                            "stylers": [{
                                "color": "#ffffff"
                            }]
                        }, {
                            "featureType": "poi",
                            "stylers": [{
                                "visibility": "off"
                            }]
                        }, {
                            "featureType": "landscape.natural",
                            "elementType": "geometry.fill",
                            "stylers": [{
                                "visibility": "on"
                            }, {
                                "color": "#b8cb93"
                            }]
                        }, {
                            "featureType": "poi.park",
                            "stylers": [{
                                "visibility": "on"
                            }]
                        }, {
                            "featureType": "poi.sports_complex",
                            "stylers": [{
                                "visibility": "on"
                            }]
                        }, {
                            "featureType": "poi.medical",
                            "stylers": [{
                                "visibility": "on"
                            }]
                        }, {
                            "featureType": "poi.business",
                            "stylers": [{
                                "visibility": "simplified"
                            }]
                        }]

                    };
                    var map = new google.maps.Map(document.getElementById("map"), mapOptions);

                    var marker = new google.maps.Marker({
                        position: myLatlng,
                        title: "Hello World!"
                    });

                    // To add the marker to the map, call setMap();
                    marker.setMap(map);
                },

                showNotification: function (from, align) {
                    type = ['', 'info', 'danger', 'success', 'warning', 'rose', 'primary'];

                    color = Math.floor((Math.random() * 6) + 1);

                    $.notify({
                        icon: "add_alert",
                        message: "Welcome to <b>Material Dashboard</b> - a beautiful freebie for every web developer."

                    }, {
                            type: type[color],
                            timer: 3000,
                            placement: {
                                from: from,
                                align: align
                            }
                        });
                }

            }
        </script>
    </environment>

    @RenderSection("Scripts", required: false)
</body>
</html>